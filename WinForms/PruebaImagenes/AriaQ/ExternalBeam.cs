//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace AriaQ
{
    using System;
    using System.Collections.Generic;
    
    public partial class ExternalBeam
    {
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2214:DoNotCallOverridableMethodsInConstructors")]
        public ExternalBeam()
        {
            this.AddOns = new HashSet<AddOn>();
            this.EnergyModes = new HashSet<EnergyMode>();
            this.ExternalFieldHstries = new HashSet<ExternalFieldHstry>();
            this.PortImagers = new HashSet<PortImager>();
            this.Techniques = new HashSet<Technique>();
        }
    
        public long ResourceSer { get; set; }
        public string ExternalBeamType { get; set; }
        public int CobaltFlag { get; set; }
        public Nullable<double> BeamAngle { get; set; }
        public Nullable<double> StopAngle { get; set; }
        public string CollMode { get; set; }
        public Nullable<double> SAD { get; set; }
        public Nullable<double> SPD { get; set; }
        public Nullable<long> PFDefaultEnergySer { get; set; }
        public Nullable<int> PFMaxMuAllow { get; set; }
        public int FixedBeamFlag { get; set; }
        public int ImagerAutoCorrFlag { get; set; }
        public Nullable<double> ImagerAutoCorrTolerance { get; set; }
        public int UserPreselectableBeamLine { get; set; }
        public Nullable<long> DefPortalImagingEnergySer { get; set; }
        public Nullable<long> LowPortalImagingEnergySer { get; set; }
        public Nullable<long> ConeBeamEnergySer { get; set; }
        public string PrimaryDosimeterUnit { get; set; }
        public Nullable<double> ShutterError { get; set; }
        public int MLCAndBlockInTheSameFieldFlag { get; set; }
    
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<AddOn> AddOns { get; set; }
        public virtual EnergyMode EnergyMode { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<EnergyMode> EnergyModes { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<ExternalFieldHstry> ExternalFieldHstries { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<PortImager> PortImagers { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<Technique> Techniques { get; set; }
        public virtual RadiationDevice RadiationDevice { get; set; }
    }
}
